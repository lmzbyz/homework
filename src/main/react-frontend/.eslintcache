[{"D:\\calismalar\\corona\\src\\main\\react-frontend\\src\\index.js":"1","D:\\calismalar\\corona\\src\\main\\react-frontend\\src\\App.js":"2","D:\\calismalar\\corona\\src\\main\\react-frontend\\src\\reportWebVitals.js":"3","D:\\calismalar\\corona\\src\\main\\react-frontend\\src\\input.js":"4","D:\\calismalar\\corona\\src\\main\\react-frontend\\src\\service.js":"5","D:\\calismalar\\corona\\src\\main\\react-frontend\\src\\BarChart.js":"6"},{"size":500,"mtime":1610743787617,"results":"7","hashOfConfig":"8"},{"size":357,"mtime":1611184994820,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1610743787617,"results":"10","hashOfConfig":"8"},{"size":4119,"mtime":1611185438227,"results":"11","hashOfConfig":"8"},{"size":1138,"mtime":1611171327908,"results":"12","hashOfConfig":"8"},{"size":7259,"mtime":1611181961586,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"56brw",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"D:\\calismalar\\corona\\src\\main\\react-frontend\\src\\index.js",[],["28","29"],"D:\\calismalar\\corona\\src\\main\\react-frontend\\src\\App.js",["30"],"D:\\calismalar\\corona\\src\\main\\react-frontend\\src\\reportWebVitals.js",[],"D:\\calismalar\\corona\\src\\main\\react-frontend\\src\\input.js",["31"],"D:\\calismalar\\corona\\src\\main\\react-frontend\\src\\service.js",[],"D:\\calismalar\\corona\\src\\main\\react-frontend\\src\\BarChart.js",["32","33","34"],"import React from 'react';\r\nimport {Bar, Pie} from 'react-chartjs-2';\r\nimport client from \"./service\";\r\nimport {ResponsiveContainer} from \"recharts\";\r\n\r\nclass BarChart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            chartData: {},\r\n            chartDataDate :{},\r\n            chartDataAll:{}\r\n        }\r\n    }\r\n\r\n\r\n    async componentDidUpdate(prevProps, prevState) {\r\n        var nums = [];\r\n\r\n        if (prevProps.date !== this.props.date || prevProps.location !== this.props.location) {\r\n            console.log(\"Eşit DEĞİl\");\r\n\r\n            await fetch('http://localhost:8080/info/data-of-city-date', {\r\n                mode: 'cors',\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: this.props.location + \",\" + this.props.date,\r\n            });\r\n\r\n            client.getCountDates().then(response => {\r\n                nums = response.data;\r\n                // console.log(response.data)\r\n                this.getChartDataDate(nums);\r\n            })\r\n        // }\r\n        // if (prevProps.location !== this.props.location) {\r\n            await fetch('http://localhost:8080/info/data-of-city', {\r\n                mode: 'cors',\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: this.props.location,\r\n            });\r\n\r\n            client.getCounts().then(response => {\r\n                nums = response.data;\r\n                // console.log(response.data)\r\n                this.getChartData(nums);\r\n            })\r\n        }\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     console.log(\"hello\")\r\n    //     var numsAll = [];\r\n    //     client.getAllCounts().then(response => {\r\n    //         numsAll = response.data;\r\n    //\r\n    //         this.getChartDataAll(numsAll);\r\n    //     })\r\n    // }\r\n\r\n    // getChartDataAll(numsAll){\r\n    //     this.setState({\r\n    //         chartDataAll: {\r\n    //             labels: ['Vefat', 'Taburcu', 'Vaka'],\r\n    //             datasets: [\r\n    //                 {\r\n    //                     label: '# of People',\r\n    //                     data: numsAll,\r\n    //                     backgroundColor: [\r\n    //                         'rgba(255, 99, 132, 0.2)',\r\n    //                         'rgba(54, 162, 235, 0.2)',\r\n    //                         'rgba(255, 206, 86, 0.2)'\r\n    //                     ]\r\n    //                 }\r\n    //             ]\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    getChartDataDate(nums) {\r\n        this.setState({\r\n            chartDataDate: {\r\n                labels: ['Vefat', 'Taburcu', 'Vaka'],\r\n                datasets: [\r\n                    {\r\n                        label: '# of People',\r\n                        data: nums,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.2)',\r\n                            'rgba(54, 162, 235, 0.2)',\r\n                            'rgba(255, 206, 86, 0.2)'\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    getChartData(nums) {\r\n        this.setState({\r\n            chartData: {\r\n                labels: ['Vefat', 'Taburcu', 'Vaka'],\r\n                datasets: [\r\n                    {\r\n                        label: '# of People',\r\n                        data: nums,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.2)',\r\n                            'rgba(54, 162, 235, 0.2)',\r\n                            'rgba(255, 206, 86, 0.2)'\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    static defaultProps = {\r\n        displayTitle: true,\r\n        displayLegend: true,\r\n        legendPosition: 'right',\r\n        location: ''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <div className=\"chart2\">\r\n                    <ResponsiveContainer width=\"80%\" height={300}>\r\n                        <Bar\r\n                            data={this.state.chartData}\r\n                            options={{\r\n                                scales: {\r\n                                    dataset: [{\r\n                                        barThickness: 200\r\n                                    }]\r\n                                },\r\n                                title: {\r\n                                    display: this.props.displayTitle,\r\n                                    text: 'Tüm Veriler ' + this.props.location,\r\n                                    fontSize: 25\r\n                                },\r\n                                legend: {\r\n                                    display: this.props.displayLegend,\r\n                                    position: this.props.legendPosition\r\n                                }\r\n                            }}\r\n                        />\r\n                    </ResponsiveContainer>\r\n                    <ResponsiveContainer width=\"80%\" height={300}>\r\n                        <Bar\r\n                            data={this.state.chartDataDate}\r\n                            options={{\r\n                                scales: {\r\n                                    dataset: [{\r\n                                        barThickness: 200\r\n                                    }]\r\n                                },\r\n                                title: {\r\n                                    display: this.props.displayTitle,\r\n                                    text: 'Günlük Veriler ' + this.props.location + ' '+ this.props.date,\r\n                                    fontSize: 25\r\n                                },\r\n                                legend: {\r\n                                    display: this.props.displayLegend,\r\n                                    position: this.props.legendPosition\r\n                                }\r\n                            }}\r\n                        />\r\n                    </ResponsiveContainer>\r\n                    {/*<ResponsiveContainer width=\"95%\" height={400}>*/}\r\n                    {/*    <Line*/}\r\n                    {/*        data={this.state.chartData}*/}\r\n                    {/*        options={{*/}\r\n                    {/*            title: {*/}\r\n                    {/*                display: this.props.displayTitle,*/}\r\n                    {/*                text: 'Veriler ' + this.props.location,*/}\r\n                    {/*                fontSize: 25*/}\r\n                    {/*            },*/}\r\n                    {/*            legend: {*/}\r\n                    {/*                display: this.props.displayLegend,*/}\r\n                    {/*                position: this.props.legendPosition*/}\r\n                    {/*            }*/}\r\n                    {/*        }}*/}\r\n                    {/*    />*/}\r\n                    {/*</ResponsiveContainer>*/}\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BarChart;",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":7,"column":5,"nodeType":"41","messageId":"42","endLine":9,"endColumn":6},{"ruleId":"43","severity":1,"message":"44","line":71,"column":30,"nodeType":"45","messageId":"46","endLine":71,"endColumn":32},{"ruleId":"47","severity":1,"message":"48","line":1,"column":16,"nodeType":"49","messageId":"50","endLine":1,"endColumn":25},{"ruleId":"47","severity":1,"message":"51","line":2,"column":14,"nodeType":"49","messageId":"50","endLine":2,"endColumn":18},{"ruleId":"47","severity":1,"message":"52","line":2,"column":20,"nodeType":"49","messageId":"50","endLine":2,"endColumn":23},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Line' is defined but never used.","'Pie' is defined but never used.","no-global-assign","no-unsafe-negation"]